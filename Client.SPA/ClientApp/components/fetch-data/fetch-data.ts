import * as ko from 'knockout';
import 'isomorphic-fetch';
import { SampleDataService } from '../../_autogenerated/SampleDataService';
import { DataService } from '../../_autogenerated/DataService';

interface WeatherForecast {
    dateFormatted: string;
    temperatureC: number;
    temperatureF: number;
    summary: string;
}

class FetchDataViewModel {
    public forecasts = ko.observableArray<WeatherForecast>();

    constructor() {
        // this.getData();
        //this.getApiData();
        // this.getPolicyProtectedDataAsync();
        this.getCustomRequirementProtectedDataAsync();
    }

    private getData = async () => {
        var test = await SampleDataService.weatherForecasts();
    }
    private logout = async () => {
        await SampleDataService.logout();
        window.location.href = "/";
    }

    private getApiData = async () => {
        const data = await DataService.getDataAsync();
        console.log(data);
    }
    private getPolicyProtectedDataAsync = async () => {
        const data = await DataService.getPolicyProtectedDataAsync();
        console.log(data);
    }
    private getCustomRequirementProtectedDataAsync = async () => {
        const data = await DataService.getCustomRequirementProtectedDataAsync(5);
        console.log(data);
    }
}

export default { viewModel: FetchDataViewModel, template: require('./fetch-data.html') };
